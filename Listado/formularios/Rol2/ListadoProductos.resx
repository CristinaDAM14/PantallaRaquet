<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="editarProductos.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QAWM/Q/rKjoy80WVDwAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>